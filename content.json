{"posts":[{"title":"","text":"C++ int类型4字节 float类型在32位中是4字节 在64位中是8字节 像Java是没有指针的，同时也不对程序员暴露其元素的地址，寻址操作完全交给虚拟机。 C++在二维数组中连续，在一维数组中不连续 右移一维相当于除以2 二分查找的一些技巧： 前提是数组为有序数组，同时题目还强调数组中无重复元素 如果是边界应该如何判断 因为取mid值时已经对比了和目标值的是否匹配，所以在之后确定边界时可以加一减一操作 1234567if (guess == target) { return midOfIndex;} else if (guess &lt; target) { minOfIndex = midOfIndex + 1;} else { maxOfIndex = midOfIndex - 1;} 然后这样在while循环中设置一个小于等于，就可以在最后一次判断是否等于边界 例如{0,1,2,3,4}找4 right_index：0 left_index：4 right_index：3 left_index：4 right_index：4 left_index：4 奇数和偶数数组有没有必要考虑 一个数的数组有没有必要考虑 其他方法需要，上述代码不用 1temp[k--] 是最后减去","link":"/2024/01/23/PartI_Array/"},{"title":"myFirst Blog","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More infoGGGGGGG: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2024/01/21/hello-world/"}],"tags":[],"categories":[],"pages":[]}